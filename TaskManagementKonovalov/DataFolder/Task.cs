//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TaskManagementKonovalov.DataFolder
{
    using System;
    using System.Collections.Generic;
    
    public partial class Task
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Task()
        {
            this.Project = new HashSet<Project>();
        }
    
        public int IdTask { get; set; }
        public string NameTask { get; set; }
        public string DescriptionTask { get; set; }
        public int IdPrirority { get; set; }
        public int IdStaff { get; set; }
        public System.DateTime DateDue { get; set; }
        public int IdStatusTask { get; set; }
        public string CommentsTask { get; set; }
        public int IdStatusDelete { get; set; }
        public int IdCategory { get; set; }
        public Nullable<int> IdCheckSheet { get; set; }
        public int IdStatusDeadline { get; set; }
        public Nullable<System.DateTime> DateDeadline { get; set; }
        public System.DateTime DateStartTask { get; set; }
        public byte[] Documents { get; set; }
    
        public virtual Category Category { get; set; }
        public virtual CheckSheet CheckSheet { get; set; }
        public virtual Prirority Prirority { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Project> Project { get; set; }
        public virtual Staff Staff { get; set; }
        public virtual StatusDeadline StatusDeadline { get; set; }
        public virtual StatusDelete StatusDelete { get; set; }
        public virtual StatusTask StatusTask { get; set; }
    }
}
